AWSTemplateFormatVersion: 2010-09-09

Parameters:
  BucketName:
    Description: Unique name for your bucket. This will be in the S3 url to your React app.
    Type: String
  AccountId:
    Description: Unique AWS id for your account. This is the AWS account that the resources will be created and managed in.
    Type: String

Resources:
  SuperAppBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  SuperAppBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SuperAppBucket
      PolicyDocument:
        Id: AllowCloudFrontToAccessS3Bucket
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref SuperAppBucket, '/*']]
            Condition:
              StringEquals:
                AWS:SourceArn:
                  !Join [
                    '',
                    [
                      'arn:aws:cloudfront::',
                      !Ref AccountId,
                      ':distribution/',
                      !Ref SuperAppDistribution,
                    ],
                  ]

  SuperAppDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - '*.the-super-app.com'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ViewerProtocolPolicy: 'redirect-to-https'
          TargetOriginId: SuperAppOrigin
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
        DefaultRootObject: index.html
        Enabled: true
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: /index.html
            ResponseCode: 200
          - ErrorCode: 404
            ResponsePagePath: /index.html
            ResponseCode: 200
        Origins:
          - Id: SuperAppOrigin
            DomainName: !GetAtt SuperAppBucket.RegionalDomainName
            OriginAccessControlId: !GetAtt SuperAppOriginAccessControl.Id
            S3OriginConfig: {}
        ViewerCertificate:
          AcmCertificateArn: !Ref SuperAppCertificate
          SslSupportMethod: sni-only

  SuperAppOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: 'super-app-origin-access-control'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  SuperAppRouteSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: Z01898142DWDY1JY5FOPD
      RecordSets:
        - Name: '*.the-super-app.com'
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # general cloudfront hosted zone id
            DNSName: !GetAtt SuperAppDistribution.DomainName
            EvaluateTargetHealth: true

  SuperAppCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: '*.the-super-app.com'
      DomainValidationOptions:
        - DomainName: '*.the-super-app.com'
          HostedZoneId: Z01898142DWDY1JY5FOPD # route 53 zone
      ValidationMethod: DNS

Outputs:
  SuperAppDomain:
    Value: !GetAtt SuperAppDistribution.DomainName
  CloudFrontDistributionId:
    Value: !GetAtt SuperAppDistribution.Id
  SuperAppS3BucketName:
    Value: !Ref SuperAppBucket
